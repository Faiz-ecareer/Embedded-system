#include "mbed.h"
#include "nRF24L01P.h"

Serial pc(USBTX, USBRX); // tx, rx

nRF24L01P my_nrf24l01p(PTD2, PTD3, PTD1, PTD0, PTD5, PTD4);    // mosi, miso, sck, csn, ce, irq
DigitalOut RedLED(PTA5);
AnalogIn pot(PTB0);
AnalogIn ldr(PTB1);

int main()
{
    char count[2];
    char TxDataCnt;
    char temp;
    float value1,value2;


    my_nrf24l01p.powerUp();
    my_nrf24l01p.setRfFrequency(2412);

    // Display the (default) setup of the nRF24L01+ chip
    pc.printf( "nRF24L01+ Frequency    : %d MHz\r\n",  my_nrf24l01p.getRfFrequency() );
    pc.printf( "nRF24L01+ Output power : %d dBm\r\n",  my_nrf24l01p.getRfOutputPower() );
    pc.printf( "nRF24L01+ Data Rate    : %d kbps\r\n", my_nrf24l01p.getAirDataRate() );
    pc.printf( "nRF24L01+ TX Address   : 0x%010llX\r\n", my_nrf24l01p.getTxAddress() );
    pc.printf( "nRF24L01+ RX Address   : 0x%010llX\r\n", my_nrf24l01p.getRxAddress() );



    pc.printf( "Simple Transmitter (0 - 9 Counter) \r\n");

    TxDataCnt = 2;
    my_nrf24l01p.setTransferSize(TxDataCnt);

    my_nrf24l01p.enable();
    
        //value1=value1*3.3;
        //wait(1);
        //ldr.read();
        //value2=value2*3.3;
        //wait(1);
 
        
    while (1) {

        value1=3.3*pot.read();
        value2=3.3*ldr.read();
        count[0] = value1*76;
        count[1] = value2*76;
        
        

        // Send the Transmit buffer via the nRF24L01+
        temp = my_nrf24l01p.write( NRF24L01P_PIPE_P0,count, TxDataCnt );

        
        
        pc.printf( "POT = %2.2f LDR = %2.2f\r\n",value1,value2);
        //pc.printf("pot value   : %f \r\n",value1);
        //pc.printf("ldr value   : %f \r\n",value2);

        // Toggle LED1 (to help debug Host -> nRF24L01+ communication)
          RedLED = !RedLED;
            
        //count[1]++;
        
        wait(1);
    }
}
